What happens when you initialize a repository? Why do you need to do it?

	a git file is created. Allows you to use git to track your files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	You can get the files 'ready' for committing. It allows you to organize your files to be submitted in one commit without having to commit all files, some with no changes at all.

How can you use the staging area to make sure you have one commit per logical
change?
	
		By double-checking the files that are to be committed eg. by using git diff --staging.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches help by keeping different directions of work organized. for example you may want to experiment with some changes but don't want to change the main code.

How do the diagrams help you visualize the branch structure?

	You can quickly and easily see the relationships between the commits and branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The code joined together. The game didn't work as expected though.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Automatic merging allows for a more efficient merging and you wouldn't have to look through the code to merge. Always doing merges manually is time consuming and some code is straightforward enough that you don't need to look at the code in detail.